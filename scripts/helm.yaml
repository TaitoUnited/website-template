# Here you can configure all your Kubernetes resources with a
# developer-friendly YAML format

global:
  domain: ${taito_domain}
  url: https://${taito_domain}
  publicPort: 443
  logProvider: ${taito_logging_provider}
  logFormat: ${taito_logging_format}
  logLevel: info # trace, debug, info, warn, error, fatal
  registry: ${taito_container_registry}
  imagePullPolicy: ""
  debug: false

full-stack:
  networkPolicyEnabled: true
  networkPolicyProvider: ${kubernetes_network_policy_provider}

  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 2Gi
    storageClass: fast

  ingress:
    class: nginx
    namespace: nginx-ingress
    domains:
      - name: ${taito_domain}
        altDomains:
          - name: ${taito_altdomain}

  serviceDefaults:
    # Auth and security
    basicAuthEnabled: ${taito_basic_auth_enabled}
    basicAuthHtpasswdSecret: ${taito_project}-${taito_env}-basic-auth
    modsecurityEnabled: true
    serviceAccountRoles: ["taito-restricted-pod"]
    # Horizontal scaling
    replicas: ${kubernetes_replicas}
    minReplicas: ${kubernetes_replicas}
    # Environment variables
    env:
      COMMON_ENV: ${taito_env}

  services:
    # NOTE: See helm/values.yaml for a list of all service attributes
    # and helm/examples.yaml for some examples.

    www:
      paths:
        - path:
      cpuRequest: 5m
      cpuLimit: 100m
      memoryRequest: 10Mi
      memoryLimit: 256Mi
      replicas: ${kubernetes_replicas}
      autoscale: false
      minReplicas: ${kubernetes_replicas}
      maxReplicas: 5
      persistentVolumeMounts:
        - mountPath: /service
          volumePath: build
          readOnly: true
      env:
        REPLACE_BASE_PATH:
        REPLACE_ASSETS_PATH: ${taito_cdn_project_path}/${taito_build_image_tag}/www
        REPLACE_ASSETS_DOMAIN: ${taito_cdn_domain}

    webhook:
      enabled: false
      name: webhook
      paths:
        - path: /webhook
          clientMaxBodySize: 1m
      port: 9000
      cpuRequest: 100m
      cpuLimit: 1000m
      memoryRequest: 512Mi
      memoryLimit: 1280Mi
      replicas: 1
      livenessDisabled: true # TODO
      # Avoid duplicate volume mount errors by using Recreate instead of RollingUpdate
      strategyType: Recreate
      # Give volume write permissions for root(0) group
      fsGroup: 0
      initCommand: "chmod g+w /build"
      # Volume mount
      persistentVolumeMounts:
        - mountPath: /build
          volumePath: build
          readOnly: false
      secrets:
        WEBHOOK_URL_PREFIX: ${taito_project}-${taito_env}-webhook.urlprefix
        SLACK_WEBHOOK_URL: ${taito_project}-${taito_env}-webhook.slackurl
        VC_TOKEN: ${taito_project}-${taito_env}-webhook.gittoken
      env:
        WEBSITE_URL: https://${taito_domain}
        SLACK_CHANNEL: taito-website
        VC_PULL_ENABLED: false
        VC_REPOSITORY_URL: ${taito_vc_repository_url}.git
